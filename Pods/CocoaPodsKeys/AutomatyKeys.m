//
// Generated by CocoaPods-Keys
// on 08/03/2020
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "AutomatyKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation AutomatyKeys

  @dynamic apiUrl;
  @dynamic userToken;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(AutomatyKeys *, SEL) = NULL;

  if ([key isEqualToString:@"apiUrl"]) {
    implementation = _podKeysc74427f29b81934f5770faf14ac4cc05;
  }

  if ([key isEqualToString:@"userToken"]) {
    implementation = _podKeysce4a0b029c785bfaa2b398c06e1d94c0;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysc74427f29b81934f5770faf14ac4cc05(AutomatyKeys *self, SEL _cmd)
{
  
    
      char cString[19] = { AutomatyKeysData[600], AutomatyKeysData[385], AutomatyKeysData[394], AutomatyKeysData[807], AutomatyKeysData[274], AutomatyKeysData[10], AutomatyKeysData[78], AutomatyKeysData[166], AutomatyKeysData[563], AutomatyKeysData[69], AutomatyKeysData[265], AutomatyKeysData[820], AutomatyKeysData[320], AutomatyKeysData[794], AutomatyKeysData[348], AutomatyKeysData[427], AutomatyKeysData[48], AutomatyKeysData[30], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysce4a0b029c785bfaa2b398c06e1d94c0(AutomatyKeys *self, SEL _cmd)
{
  
    
      char cString[6] = { AutomatyKeysData[650], AutomatyKeysData[625], AutomatyKeysData[216], AutomatyKeysData[781], AutomatyKeysData[381], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char AutomatyKeysData[830] = "wNBD7kHZYj:oszZhvjYZDXUQ1Hps/Wmpu/oZQ5OuJqcCMYxcoYf5wmw5s6OLchCGuLKePoUUXwZ0Dy/Nkp+tmxqe8asx810RF9E07m16XYDZ2ZqVGaCQnEfR34LLSGBom8pT+wogO1ufR/BfEk8u988O4wzbeTTKqF10O+/evGGZgfO8dkVszd/bLP/ZcZYxKXADJcWtvR497zbcVw7JUoPLk2Em/Ef69tixdWCrx87N4MKf5DG4zsd/eVr0jyNx3NZcrsuyBozEYTV5o2sdFV+kW6sXaomiCuW439Z++y3FmpyG7cvb8Xts+PUK+qtcloNodM9F5sSsuN4B5RoFNWjkQdo3.qkpgzXyCIlXJskdXpfnqb5wQHCny+5ebnyT7t/RFrCYrltpkhLzn7GBL859iwosbSBUoeP+2aAGPSucl1hzKxEAxhadDeYbSsHM7frW8ldLjT7RnzmVVRn7du+EegHz1RWT/cwWSz1HnyZ9gpR75S1An8EhAm9quUJU4S1L1ACoJqketej7IzRF29YJx1/Y0B5886GmA3a/rCw7QiJXnmngakGDqubZPnwHH2iN1gLLtB0X4CadYYoatdWAhUNATfYk9hQPVdz/pv/mpeWW3oU9XXCYN/NkDMjLh3L2JnexOvTaczRo2KbIMVuD9nHZAwtDqQ6chLhLaAFp7M00HgQhcO6hY3fqORwJzYGuar0uI+W81Kwq6KBxD/GErzSz8nY1bCKBnoyF+Mq9hWhLugmBmajkG5wjmX/QyxRzUcvbcbKZleYHk48BqfF3qnefny2jjGfvrOvp/a54V6axLslvgWZ3bGhN\\\"";

- (NSString *)description
{
  return [@{
            @"apiUrl": self.apiUrl,
            @"userToken": self.userToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
