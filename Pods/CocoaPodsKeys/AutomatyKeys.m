//
// Generated by CocoaPods-Keys
// on 04/03/2020
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "AutomatyKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation AutomatyKeys

  @dynamic apiUrl;
  @dynamic userToken;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(AutomatyKeys *, SEL) = NULL;

  if ([key isEqualToString:@"apiUrl"]) {
    implementation = _podKeysc74427f29b81934f5770faf14ac4cc05;
  }

  if ([key isEqualToString:@"userToken"]) {
    implementation = _podKeysce4a0b029c785bfaa2b398c06e1d94c0;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysc74427f29b81934f5770faf14ac4cc05(AutomatyKeys *self, SEL _cmd)
{
  
    
      char cString[19] = { AutomatyKeysData[27], AutomatyKeysData[462], AutomatyKeysData[758], AutomatyKeysData[566], AutomatyKeysData[296], AutomatyKeysData[216], AutomatyKeysData[715], AutomatyKeysData[691], AutomatyKeysData[480], AutomatyKeysData[293], AutomatyKeysData[256], AutomatyKeysData[592], AutomatyKeysData[706], AutomatyKeysData[230], AutomatyKeysData[806], AutomatyKeysData[650], AutomatyKeysData[150], AutomatyKeysData[594], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysce4a0b029c785bfaa2b398c06e1d94c0(AutomatyKeys *self, SEL _cmd)
{
  
    
      char cString[6] = { AutomatyKeysData[567], AutomatyKeysData[205], AutomatyKeysData[723], AutomatyKeysData[6], AutomatyKeysData[393], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char AutomatyKeysData[894] = "lAZKcde3lbAeXlWIA5yXiy3IU2Kh+v+1zgminOkpD3xXI1R2ROBWUGi5d62wigD1y9NtDalacyZluCtrO0PhDvQtfUVEmbkMhHk5t4WdhnfBySapTfaHIxLJMst5GKFLymAHEFVPqleCoiX3HGRqjqo64BEPGrPbd0/Tmw7tuX/3QxFKX5vB1hXy/keYOmiNMgiBSQVbnf4rDoJji/P4aYjE:ZwkUk4fluDKATe8FUgWRf4akskNkT4vNIuu2/12o71RZyxIpWP8947IEGjmfjAEmIT26g8ngLGBZoW/sbwMxTdSEYi4lHpQLSyWe9wGA6YMW/ILbh5j/+5wuQMexd25UeWLRKKpiTOnyjmpx2FTtBEQhOWvKEztCA9DZpoxw26C96Hjln0vhqm4fcGdyFYKN0oaj8ttBogBLHWk9r5ZvFEyaH2IXp0DkoH5Hf2FiwP3VUUc0+6OECt4T+AYg9iQ/am2Y5wngUM+ZcVuvVvBxe+c0NnA+FnGYaqZ82NJyL49AjFnVoXeeeof/0h2/HJCLs/OMkSXMqqIoH9W+835cSOcmpDM34pT2qKU6R39c1qx6djxfNgaS0j0gVmerKNxKtlOKsjY0hiqknBZUGoBBidKF/M/cJpXF+BPC5sQlKHFT0IOvPcgBc3lG8WDGHe2f5GVpu2pccjaiXpEChPQIl+GeNP/te+gG+fxEaefPgl85Jx6pk1/Lq9VM5XkvJGzid1n/wenxs7H1vZIg/Zt89nivejpByt7X36FLvn+b/qSZh0taPwAOBt9AOgMd99dVU4cuQ/Ul8edxz.tj3FTJq62YF5PucIUydyEX/dP/MnoCYCHPcXSbyQccY4PwbmGkd47OutzEqFJEdtxdN1ujgd9SVcCiekZbw==\\\"";

- (NSString *)description
{
  return [@{
            @"apiUrl": self.apiUrl,
            @"userToken": self.userToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
